#
# Configure the level of logging for various classes here.
# For example
#
#     edu.stanford.smi.protege.model.framestore.level = FINEST
#
# will turn on all logging above the level FINEST for the framestore classes.
#

#
# Use protege.system.level=FINE to see empty catch block exceptions or other 
# errors that somebody thought could be ignored.
#
protege.system.level=CONFIG


handlers=java.util.logging.ConsoleHandler edu.stanford.smi.protege.util.FileHandler
java.util.logging.FileHandler.level=ALL

#
# This line is deliberately ignored by the 
#   edu.stanford.smi.protege.util.FileHandler
# The path is set to ${protege.dir}/logs/protege_%u.log
# log4j allows one to do this in the configuration file.
#
java.util.logging.FileHandler.pattern=%t/protege_%u.log
#
# formatter line is ignored for the 
#   edu.stanford.smi.protege.util.FileHandler
# This needs investigation
#
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter

java.util.logging.ConsoleHandler.level=CONFIG
java.util.logging.ConsoleHandler.formatter=edu.stanford.smi.protege.util.ConsoleFormatter

#
# In general it is very important that fine grained logging be turned
# off by default.  Logging can make a significant impact on performance.
#

#
# The following is an unusual case where we deliberately enable fine
# grained logging.  The purpose of this is to allow faulty plugins to 
# only leave short messages on the console while the longer more
# explicit message goes to the protege log file.  Performance impact
# should be minimal unless a ill-behaved plugin is generating a very
# large number of error messages.
#
 edu.stanford.smi.protege.model.framestore.EventDispatchFrameStore.level=FINE


#edu.stanford.smi.protegex.owl.jena.level=FINEST
#edu.stanford.smi.protegex.owl.swrl.SWRLSystemFrames.level=FINEST
#edu.stanford.smi.protegex.owl.tests.AbstractJenaTestCase.level=FINEST
#edu.stanford.smi.protegex.owl.model.impl.AbstractOWLModel.level=FINEST

#edu.stanford.smi.protege.model.framestore.level=FINEST
#edu.stanford.smi.protege.model.framestore.FrameStoreManager.level=FINEST
#edu.stanford.smi.protege.model.framestore.FrameStore_Test.level=FINEST
#edu.stanford.smi.protege.model.framestore.MergingNarrowFrameStore.level=FINEST
#edu.stanford.smi.protege.model.Project.level = FINEST
#edu.stanford.smi.protege.plugin.PluginUtilities.level=FINEST
#edu.stanford.smi.protege.server.level=FINEST
#edu.stanford.smi.protege.server.framestore.FrameCalculator.level=FINEST
#edu.stanford.smi.protege.server.framestore.LocalizeFrameStore.level=FINEST
#edu.stanford.smi.protege.server.framestore.RemoteClientFrameStore.level=FINEST
#edu.stanford.smi.protege.server.framestore.ServerFrameStore.level=FINEST
#edu.stanford.smi.protege.server.Server_Test.level=FINEST
#edu.stanford.smi.protege.server.SSLSettings.level=FINEST
#edu.stanford.smi.protege.server.framestore.LocalizeFrameStore.level=FINEST
#edu.stanford.smi.protege.storage.database.level=FINEST
#edu.stanford.smi.protege.storage.database.DatabaseFrameDb.level=FINEST
#edu.stanford.smi.protege.storage.database.IncludingDatabaseAdapter.level=FINEST
#edu.stanford.smi.protege.util.LockStepper.level=FINE
#edu.stanford.smi.protege.util.Log.level=FINEST


#org.protege.client.cache.level=FINE
#edu.stanford.smi.protegex.changes.listeners.ChangesListener.level=FINE
#edu.stanford.smi.protegex.server_changes.listeners.owl.ChangesOwlKBListener.level=FINE
#edu.stanford.smi.protegex.server_changes.ServerChangesUtil.level=FINE
#edu.stanford.smi.protegex.prompt.promptDiff.users.ProtegeLogging.level=FINE
#edu.stanford.smi.protegex.server_changes.time.ChangingFrameManagerImpl=FINE

#
# RMI logging
#
#sun.rmi.client.call.level=FINEST
#sun.rmi.server.call.level=FINEST
#sun.rmi.transport.misc.level=FINEST
#sun.rmi.transport.tcp.level=FINEST


#
# Debugging server-client performance
#
#sun.rmi.client.call.level=FINEST
#edu.stanford.smi.protege.server.framestore.FrameCalculator.level=FINEST
#edu.stanford.smi.protege.server.framestore.RemoteClientFrameStore.level=FINE
